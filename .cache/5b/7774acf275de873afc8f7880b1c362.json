{"id":"node_modules/binary-tree-visualizer/lib/utils/tree.js","dependencies":[{"name":"C:\\Users\\EG2036TU\\BST-visualizer-main\\node_modules\\binary-tree-visualizer\\lib\\utils\\tree.js.map","includedInParent":true,"mtime":1721160123596},{"name":"C:\\Users\\EG2036TU\\BST-visualizer-main\\node_modules\\binary-tree-visualizer\\src\\utils\\tree.ts","includedInParent":true,"mtime":1721160123770},{"name":"C:\\Users\\EG2036TU\\BST-visualizer-main\\package.json","includedInParent":true,"mtime":1721160407356},{"name":"C:\\Users\\EG2036TU\\BST-visualizer-main\\node_modules\\binary-tree-visualizer\\package.json","includedInParent":true,"mtime":1721160123523},{"name":"../config/theme","loc":{"line":1,"column":18,"index":18},"parent":"C:\\Users\\EG2036TU\\BST-visualizer-main\\node_modules\\binary-tree-visualizer\\lib\\utils\\tree.js","resolved":"C:\\Users\\EG2036TU\\BST-visualizer-main\\node_modules\\binary-tree-visualizer\\lib\\config\\theme.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCanvasHeightFromTreeHeight = getCanvasHeightFromTreeHeight;\nexports.getCanvasWidthFromMaxNodeSpacing = getCanvasWidthFromMaxNodeSpacing;\nexports.getMaxLeafNodesFromHeight = getMaxLeafNodesFromHeight;\nexports.getRequiredAndActualHeightAndWidth = getRequiredAndActualHeightAndWidth;\nexports.getXPositionFromGivenHorizontalNodePosition = getXPositionFromGivenHorizontalNodePosition;\nvar _theme = _interopRequireDefault(require(\"../config/theme\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Get the max number of leaf nodes from height of the binary tree\n *\n * @param {number} treeHeight - Height of the tree (number of nodes from)\n * @return {number} - Maximum number of leaf nodes\n */\nfunction getMaxLeafNodesFromHeight(treeHeight) {\n  return Math.pow(2, treeHeight - 1);\n}\n/**\n * Maximum canvas width required from number of tree nodes\n *\n * @param {number} maxNodes - Maximum number of nodes\n * @return {number} - The max width required\n */\nfunction getCanvasWidthFromMaxNodeSpacing(maxNodes) {\n  return (maxNodes + 2) * _theme.default.leafNodeSpace;\n}\n/**\n * Get the x position from given horizontal node position\n *\n * @param {number} nodes - The number of nodes from the left\n * @return {number} - The x position\n */\nfunction getXPositionFromGivenHorizontalNodePosition(nodes) {\n  return nodes * _theme.default.leafNodeSpace;\n}\n/**\n * Get canvas height from the tree height\n *\n * @param {number} treeHeight - Height of the tree (number of nodes from)\n * @return {number} - The canvas height in px\n */\nfunction getCanvasHeightFromTreeHeight(treeHeight) {\n  return treeHeight * _theme.default.lineHeight;\n}\n/**\n * Get required and actual height and width\n *\n * @param {number} maxNodeSpacing\n * @param {number} heightOfTree\n * @param {number} maxWidth\n * @param {number} maxHeight\n * @return {{\n *  maxCanvasHeightRequired: number,\n *  maxCanvasWidthRequired:number,\n *  actualMaxHeight: number,\n *  actualMaxWidth: number\n * }}\n */\nfunction getRequiredAndActualHeightAndWidth(maxNodeSpacing, heightOfTree, maxWidth, maxHeight) {\n  const maxCanvasWidthRequired = getCanvasWidthFromMaxNodeSpacing(maxNodeSpacing);\n  const maxCanvasHeightRequired = getCanvasHeightFromTreeHeight(heightOfTree + 1);\n  const actualMaxWidth = maxCanvasWidthRequired > maxWidth ? maxCanvasWidthRequired : maxWidth;\n  const actualMaxHeight = maxCanvasHeightRequired > maxHeight ? maxCanvasHeightRequired : maxHeight;\n  return {\n    maxCanvasHeightRequired,\n    maxCanvasWidthRequired,\n    actualMaxHeight,\n    actualMaxWidth\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":4}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":10}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":13}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":35}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":36}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":43}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":32}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":33}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":44}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":45}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":49}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":50}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":51}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":61}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":64}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":65}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":70}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":77}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":79}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":1,"column":36},"generated":{"line":12,"column":80}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":13,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":19,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":19,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":9,"column":41},"generated":{"line":19,"column":34}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":9,"column":42},"generated":{"line":19,"column":35}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":9,"column":60},"generated":{"line":19,"column":45}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":9,"column":60},"generated":{"line":19,"column":47}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":20,"column":2}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":20,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":20,"column":13}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":20,"column":14}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":20,"column":17}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":20,"column":18}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":10},"generated":{"line":20,"column":19}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":20,"column":21}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":25},"generated":{"line":20,"column":31}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":26},"generated":{"line":20,"column":34}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":28},"generated":{"line":20,"column":35}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":10,"column":28},"generated":{"line":20,"column":36}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":21,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":22,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":28,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":28,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":19,"column":48},"generated":{"line":28,"column":41}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":19,"column":49},"generated":{"line":28,"column":42}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":19,"column":65},"generated":{"line":28,"column":50}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":19,"column":65},"generated":{"line":28,"column":52}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":29,"column":2}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":29,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":20,"column":10},"generated":{"line":29,"column":10}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":20,"column":18},"generated":{"line":29,"column":18}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":20,"column":21},"generated":{"line":29,"column":21}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":20,"column":22},"generated":{"line":29,"column":22}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":29,"column":26}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":20,"column":31},"generated":{"line":29,"column":40}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":20,"column":32},"generated":{"line":29,"column":41}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":20,"column":45},"generated":{"line":29,"column":54}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":30,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":31,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":37,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":29,"column":16},"generated":{"line":37,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":29,"column":59},"generated":{"line":37,"column":52}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":29,"column":60},"generated":{"line":37,"column":53}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":29,"column":73},"generated":{"line":37,"column":58}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":29,"column":73},"generated":{"line":37,"column":60}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":38,"column":2}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":38,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":30,"column":15},"generated":{"line":38,"column":14}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":38,"column":17}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":38,"column":31}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":38,"column":32}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":30,"column":38},"generated":{"line":38,"column":45}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":39,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":40,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":46,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":46,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":39,"column":45},"generated":{"line":46,"column":38}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":39,"column":46},"generated":{"line":46,"column":39}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":39,"column":64},"generated":{"line":46,"column":49}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":39,"column":64},"generated":{"line":46,"column":51}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":47,"column":2}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":40,"column":10},"generated":{"line":47,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":40,"column":20},"generated":{"line":47,"column":19}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":40,"column":24},"generated":{"line":47,"column":22}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":40,"column":29},"generated":{"line":47,"column":36}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":40,"column":30},"generated":{"line":47,"column":37}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":40,"column":40},"generated":{"line":47,"column":47}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":48,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":49,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":63,"column":0}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":63,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":57,"column":50},"generated":{"line":63,"column":43}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":63,"column":44}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":58,"column":26},"generated":{"line":63,"column":58}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":63,"column":60}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":59,"column":24},"generated":{"line":63,"column":72}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":60,"column":4},"generated":{"line":63,"column":74}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":60,"column":20},"generated":{"line":63,"column":82}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":61,"column":4},"generated":{"line":63,"column":84}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":61,"column":21},"generated":{"line":63,"column":93}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":61,"column":21},"generated":{"line":63,"column":95}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":64,"column":2}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":64,"column":8}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":63,"column":30},"generated":{"line":64,"column":30}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":63,"column":33},"generated":{"line":64,"column":33}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":63,"column":65},"generated":{"line":64,"column":65}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":64,"column":6},"generated":{"line":64,"column":66}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":64,"column":20},"generated":{"line":64,"column":80}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":65,"column":3},"generated":{"line":64,"column":81}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":65,"column":2}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":66,"column":8},"generated":{"line":65,"column":8}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":66,"column":31},"generated":{"line":65,"column":31}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":66,"column":34},"generated":{"line":65,"column":34}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":66,"column":63},"generated":{"line":65,"column":63}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":66,"column":64},"generated":{"line":65,"column":64}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":66,"column":76},"generated":{"line":65,"column":76}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":66,"column":77},"generated":{"line":65,"column":79}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":66,"column":78},"generated":{"line":65,"column":80}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":66,"column":79},"generated":{"line":65,"column":81}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":66,"column":2}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":67,"column":8},"generated":{"line":66,"column":8}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":67,"column":22},"generated":{"line":66,"column":22}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":67,"column":25},"generated":{"line":66,"column":25}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":67,"column":47},"generated":{"line":66,"column":47}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":67,"column":50},"generated":{"line":66,"column":50}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":67,"column":58},"generated":{"line":66,"column":58}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":66,"column":61}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":66,"column":83}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":68,"column":29},"generated":{"line":66,"column":86}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":68,"column":37},"generated":{"line":66,"column":94}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":67,"column":2}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":67,"column":8}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":69,"column":23},"generated":{"line":67,"column":23}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":69,"column":26},"generated":{"line":67,"column":26}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":69,"column":49},"generated":{"line":67,"column":49}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":69,"column":52},"generated":{"line":67,"column":52}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":69,"column":61},"generated":{"line":67,"column":61}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":67,"column":64}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":70,"column":27},"generated":{"line":67,"column":87}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":70,"column":30},"generated":{"line":67,"column":90}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":70,"column":39},"generated":{"line":67,"column":99}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":68,"column":2}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":72,"column":9},"generated":{"line":68,"column":9}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":73,"column":4},"generated":{"line":69,"column":4}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":73,"column":27},"generated":{"line":69,"column":27}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":74,"column":4},"generated":{"line":70,"column":4}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":70,"column":26}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":75,"column":4},"generated":{"line":71,"column":4}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":75,"column":19},"generated":{"line":71,"column":19}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":72,"column":4}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":77,"column":3},"generated":{"line":73,"column":3}},{"source":"../../src/utils/tree.ts","name":null,"original":{"line":78,"column":0},"generated":{"line":74,"column":0}}],"sources":{"../../src/utils/tree.ts":"import theme from '../config/theme';\n\n/**\n * Get the max number of leaf nodes from height of the binary tree\n *\n * @param {number} treeHeight - Height of the tree (number of nodes from)\n * @return {number} - Maximum number of leaf nodes\n */\nexport function getMaxLeafNodesFromHeight(treeHeight: number) {\n  return 2 ** (treeHeight-1);\n}\n\n/**\n * Maximum canvas width required from number of tree nodes\n *\n * @param {number} maxNodes - Maximum number of nodes\n * @return {number} - The max width required\n */\nexport function getCanvasWidthFromMaxNodeSpacing(maxNodes: number) {\n  return (maxNodes + 2) * theme.leafNodeSpace;\n}\n\n/**\n * Get the x position from given horizontal node position\n *\n * @param {number} nodes - The number of nodes from the left\n * @return {number} - The x position\n */\nexport function getXPositionFromGivenHorizontalNodePosition(nodes: number) {\n  return (nodes) * theme.leafNodeSpace;\n}\n\n/**\n * Get canvas height from the tree height\n *\n * @param {number} treeHeight - Height of the tree (number of nodes from)\n * @return {number} - The canvas height in px\n */\nexport function getCanvasHeightFromTreeHeight(treeHeight: number) {\n  return (treeHeight) * theme.lineHeight;\n}\n\n/**\n * Get required and actual height and width\n *\n * @param {number} maxNodeSpacing\n * @param {number} heightOfTree\n * @param {number} maxWidth\n * @param {number} maxHeight\n * @return {{\n *  maxCanvasHeightRequired: number,\n *  maxCanvasWidthRequired:number,\n *  actualMaxHeight: number,\n *  actualMaxWidth: number\n * }}\n */\nexport function getRequiredAndActualHeightAndWidth(\n    maxNodeSpacing: number,\n    heightOfTree: number,\n    maxWidth: number,\n    maxHeight: number,\n) {\n  const maxCanvasWidthRequired = getCanvasWidthFromMaxNodeSpacing(\n      maxNodeSpacing,\n  );\n  const maxCanvasHeightRequired = getCanvasHeightFromTreeHeight(heightOfTree+1);\n  const actualMaxWidth = maxCanvasWidthRequired > maxWidth ?\n    maxCanvasWidthRequired : maxWidth;\n  const actualMaxHeight = maxCanvasHeightRequired > maxHeight ?\n    maxCanvasHeightRequired : maxHeight;\n\n  return {\n    maxCanvasHeightRequired,\n    maxCanvasWidthRequired,\n    actualMaxHeight,\n    actualMaxWidth,\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"1897c3b9a2ced8bb9cf46d817a094b2e","cacheData":{"env":{}}}